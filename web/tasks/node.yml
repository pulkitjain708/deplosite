# NO DATABASE MODIFICATION nor import, as NoSQL is flexible and no pre requisite data is available
# NO PORT MODIFICATION, manually change to 3000 and upload , specify 3000 in nginx and app.listen() 
---
- name: Node Mongo Web Server Initialization
  become: true
  hosts: EC2
  gather_facts: true
  tasks:
    
    - name: Updating System Package Links
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600
    
    - name: Installing Packages
      apt:
        name: "{{ item }}"
        update_cache: yes
        state: latest
      loop:
        - nodejs
        - npm
        - nginx
        - unzip
        - mongodb

    - file:
        path: "{{ item }}"
        state: directory
        mode: 0777
      loop:
        - /home/downloads
        - /data/db
        - /home/ubuntu/project

    - systemd:
        name: mongodb
        enabled: yes
        state: started

    - name: Download Project to directory
      copy:
        src: "{{ zipped_file_path }}"
        dest: /home/download/
        mode: 0777
      register: path_name

    - name: Unarchive Zip and move to project folder
      unarchive:
        src: "{{ path_name.dest }}"
        dest: /home/ubuntu/project
        remote_src: yes

    - name: Installing node Dependencies
      npm:
        path: /home/ubuntu/project

    - name: Start Node Process
      shell: |
          node /home/ubuntu/project/{{ root_file }}

    - name: Writing sh to execute node on Startup
      copy:
        dest: /home/ubuntu/project/run.sh
        content: |
            node /home/ubuntu/project/{{ root_file }}

    - shell: |
        chmod +x /home/ubuntu/project/run.sh

    - name: registering run.sh to run at startup
      cron:
        name: "run {{ root_file }}"
        special_time: reboot
        job: "sh /home/ubuntu/project/run.sh"
      
    - lineinfile:
        path: /etc/nginx/sites-available/default
        regexp:  try_files $uri $uri/ =404;
        insertbefore: 'try_files $uri $uri/ =404;'
        line: 'proxy_pass http://127.0.0.1:3000;'

    - shell: |
        nginx -s reload
    